import{r as y,j as d,C as p,S as h,I as m,B as a,T as x,s as i}from"./index-DGBjDCza.js";const e=[];for(let t=0;t<256;++t)e.push((t+256).toString(16).slice(1));function U(t,n=0){return(e[t[n+0]]+e[t[n+1]]+e[t[n+2]]+e[t[n+3]]+"-"+e[t[n+4]]+e[t[n+5]]+"-"+e[t[n+6]]+e[t[n+7]]+"-"+e[t[n+8]]+e[t[n+9]]+"-"+e[t[n+10]]+e[t[n+11]]+e[t[n+12]]+e[t[n+13]]+e[t[n+14]]+e[t[n+15]]).toLowerCase()}let c;const g=new Uint8Array(16);function I(){if(!c){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");c=crypto.getRandomValues.bind(crypto)}return c(g)}const j=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),s={randomUUID:j};function l(t,n,o){var u;if(s.randomUUID&&!t)return s.randomUUID();t=t||{};const r=t.random??((u=t.rng)==null?void 0:u.call(t))??I();if(r.length<16)throw new Error("Random bytes length must be >= 16");return r[6]=r[6]&15|64,r[8]=r[8]&63|128,U(r)}const{Text:w}=x,D=()=>{const[t,n]=y.useState(l()),o=()=>{n(l())},r=async()=>{try{await navigator.clipboard.writeText(t),i.success("已复制到剪贴板")}catch{i.error("复制失败")}};return d.jsx(p,{title:"UUID 生成器",style:{maxWidth:500},children:d.jsxs(h,{direction:"vertical",style:{width:"100%"},children:[d.jsx(m,{value:t,readOnly:!0,addonAfter:d.jsx(a,{onClick:r,children:"复制"})}),d.jsx(a,{type:"primary",onClick:o,children:"生成新的 UUID"}),d.jsx(w,{type:"secondary",style:{fontSize:12},children:"使用 uuidv4 生成唯一标识符"})]})})};export{D as default};
